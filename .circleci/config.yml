version: 2.1

# The main workflows executed for Rover
workflows:
  lint:
    jobs:
      - xtask:
          matrix:
            parameters:
              platform: [ubuntu_gnu]
              rust_version: [stable]
              command: [lint]
  test:
    jobs:
      - xtask:
          matrix:
            parameters:
              platform: [ubuntu_gnu, ubuntu_musl]
              rust_version: [stable, nightly]
              command: [test]

executors:
  ubuntu_gnu: &ubuntu_gnu_executor
    docker:
      - image: cimg/base:stable
    environment:
      XTASK_TARGET: "x86_64-unknown-linux-gnu"
      TMPDIR: "$HOME/test_tmp"
  ubuntu_musl: &ubuntu_musl_executor
    docker:
      - image: cimg/base:stable
    environment:
      XTASK_TARGET: "x86_64-unknown-linux-musl"

# reusable command snippets can be referred to in any `steps` object
commands:
  install_node:
    steps:
      - node/install:
          node-version: "16"
          npm-version: "7"
  ubuntu_setup_tmp:
    steps:
      - run:
          name: Create tmp directory
          command: mkdir $TMPDIR
  ubuntu_gnu_install_deps:
    steps:
      - run:
          name: Install OpenSSL
          command: sudo apt-get update && sudo apt-get install -y libssl-dev
  ubuntu_musl_install_deps:
    steps:
      - run:
          name: Install musl-tools
          command: sudo apt update && sudo apt install musl-tools

jobs:
  xtask:
    parameters:
      rust_version:
        type: enum
        enum: ["stable", "nightly"]
        default: stable
      platform:
        type: executor
      command:
        type: enum
        enum: ["lint", "test"]
    executor: << parameters.platform >>
    steps:
      - checkout
      - when:
          condition:
            equal: [ *ubuntu_gnu_executor, << parameters.platform >> ]
          steps:
            - ubuntu_gnu_install_deps
            - ubuntu_setup_tmp
      - when:
          condition:
            equal: [ *ubuntu_musl_executor, << parameters.platform >> ]
          steps:
            - ubuntu_musl_install_deps
      - install_node
      - rust/install:
          version: << parameters.rust_version >>
      - restore_cache:
          keys:
            - rust-target-v1-<< parameters.platform >>-{{ checksum "Cargo.lock" }}
      - when:
          condition:
            equal: [ lint, << parameters.command >> ]
          steps:
            - run:
                command: cargo xtask << parameters.command >> --verbose
      - when:
          condition:
            not: 
              equal: [ lint, << parameters.command >> ]
          steps:
            - run:
                command: cargo xtask << parameters.command >> --target $XTASK_TARGET --verbose
      - run:
          command: cargo xtask << parameters.command >> --verbose
      - save_cache:
          key: rust-target-v1-<< parameters.platform >>-{{ checksum "Cargo.lock" }}
          paths:
            - target/

orbs:
  rust: circleci/rust@1.5.0
  gh: circleci/github-cli@1.0.4
  node: circleci/node@4.7.0