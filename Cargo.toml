[package]
authors = ["Apollo Developers <opensource@apollographql.com>"]
categories = ["command-line-interface"]
description = """
Rover is a tool for working with the Apollo GraphQL Registry.
"""
documentation = "https://go.apollo.dev/r/docs"
edition = "2021"
keywords = ["graphql", "cli", "apollo", "graph", "registry"]
license-file = "./LICENSE"
name = "rover"
readme = "README.md"
repository = "https://github.com/apollographql/rover/"
version = "0.33.0"
default-run = "rover"

publish = false

[[bin]]
name = "rover"
path = "src/bin/rover.rs"

[[test]]
name = "e2e"
path = "tests/test_e2e.rs"

[workspace]
members = [
    ".",
    "xtask",
    "crates/houston",
    "crates/robot-panic",
    "crates/rover-http",
    "crates/rover-graphql",
    "crates/rover-studio",
    "crates/sputnik",
    "crates/timber",
    "installers/binstall",
]

[workspace.lints.clippy]
panic = "deny"

[features]
default = ["composition-js"]

# this feature exists to enable composition
# notably, it is disabled for x86_64-unknown-linux-musl builds
# because of this GitHub issue: https://github.com/denoland/deno/issues/3711
composition-js = []

### cross-workspace dependencies
# these dependencies can be used by any other workspace crate by specifying the dependency like so:
# my-dependency = { workspace = true }
[workspace.dependencies]
# path dependencies
binstall = { path = "./installers/binstall" }
houston = { path = "./crates/houston" }
robot-panic = { path = "./crates/robot-panic" }
rover-client = { path = "./crates/rover-client" }
rover-http = { path = "./crates/rover-http" }
rover-graphql = { path = "./crates/rover-graphql" }
rover-std = { path = "./crates/rover-std" }
rover-studio = { path = "./crates/rover-studio" }
sputnik = { path = "./crates/sputnik" }
timber = { path = "./crates/timber" }

# apollo maintained dependencies

# https://github.com/apollographql/apollo-rs
apollo-parser = "0.8"
apollo-encoder = "0.8"

# https://github.com/apollographql/federation-rs
apollo-federation-types = { version = "0.15.3", features = ["json_schema"] }

apollo-language-server = { version = "0.4.1", default-features = false, features = ["tokio"] }

# crates.io dependencies
anyhow = "1"
ariadne = "0.5"
assert_fs = "1"
assert_cmd = "2"
assert-json-diff = "2"
async-trait = "0.1.83"
backtrace = "0.3"
backon = { version = "1.4.0", features = ["std", "tokio-sleep"] }
base64 = "0.22"
billboard = "0.2"
buildstructor = "0.6.0"
bytes = "1.8.0"
cargo_metadata = "0.20"
calm_io = "0.1"
camino = { version = "1", features = ["serde1"] }
clap = "4"
chrono = "0.4"
ci_info = "0.14"
comfy-table = {  version = "7.1.4", features = ["custom_styling"] }
console = "0.15"
derive-getters = "0.5.0"
dialoguer = "0.11"
directories-next = "2.0"
flate2 = "1"
futures = "0.3"
git-url-parse = "0.4.5"
git2 = { version = "0.20", default-features = false }
graphql_client = "0.14"
heck = "0.5"
humantime = "2.1.0"
http = "1.1.0"
http-body = "1.0.1"
http-body-util = "0.1.2"
httpmock = "0.7"
hyper = "1.0"
indoc = "2"
itertools = "0.14.0"
lazycell = "1"
lazy_static = "1.4"
notify = { version = "8" }
opener = "0.8"
os_info = "3.7"
os_type = "2.6"
predicates = "3"
pretty_assertions = "1"
rand = "=0.9.1"
regex = "1"
reqwest = { version = "0.12", default-features = false }
rstest = "0.25.0"
schemars = "0.8.22"
semver = "1"
serial_test = "3"
serde = "1.0"
serde_json = "1.0"
serde_json_traversal = "0.2"
serde_with = { version = "3", default-features = false, features = ["macros"]}
serde_yaml = "0.9"
shell-candy = "0.4"
speculoos = "0.13.0"
strip-ansi-escapes = "0.2"
strsim = "0.11"
strum = "0.27"
strum_macros = "0.27"
sha2 = "0.10"
shellexpand = "3.1"
termcolor = "1.3"
thiserror = "2"
tap = "1.0.1"
tar = "0.4"
termimad = "0.33"
tempfile = "3.8"
tokio = { version = "1.38", features = ["signal"] }
tokio-stream = "0.1"
tokio-test = "0.4.4"
tokio-util = "0.7.12"
toml = "0.8"
tower = { version = "0.5.2", features = ["make", "retry", "timeout"] }
tower-http = "0.6.1"
tower-test = "0.4.0"
tracing = "0.1"
tracing-core = "0.1"
tracing-subscriber = "0.3"
tracing-test = "0.2.5"
which = "8"
wsl = "0.1"
uuid = "1"
url = "2"
zip = "4.0"

### rover specific dependencies
[dependencies]
anyhow = { workspace = true }
assert_fs = { workspace = true }
async-trait = { workspace = true }
apollo-language-server = { workspace = true}
apollo-federation-types = { workspace = true }
apollo-parser = { workspace = true }
billboard = { workspace = true }
binstall = { workspace = true }
buildstructor = { workspace = true }
calm_io = { workspace = true }
camino = { workspace = true }
clap = { workspace = true, features = ["color", "derive", "env"] }
chrono = { workspace = true }
console = { workspace = true }
derive-getters = { workspace = true }
dialoguer = { workspace = true }
flate2 = { workspace = true }
futures = { workspace = true }
graphql_client = { workspace = true }
heck = { workspace = true }
http = { workspace = true }
http-body-util = { workspace = true }
houston = { workspace = true }
itertools = { workspace = true }
lazycell = { workspace = true }
lazy_static = { workspace = true }
opener = { workspace = true }
os_info = { workspace = true }
rand = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
robot-panic = { workspace = true }
rover-client = { workspace = true }
rover-graphql = { workspace = true }
rover-http = { workspace = true }
rover-std = { workspace = true }
rover-studio = { workspace = true }
schemars = { workspace = true }
semver = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }
serde_yaml = { workspace = true }
shellexpand = { workspace = true }
sputnik = { workspace = true }
strsim = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
tap = { workspace = true }
tar = { workspace = true }
tempfile = { workspace = true }
timber = { workspace = true }
termimad = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["rt", "rt-multi-thread", "macros", "process", "sync"] }
tokio-stream = { workspace = true, features = ["sync"]}
tokio-util = { workspace = true }
toml = { workspace = true }
tower = { workspace = true }
tower-lsp = { version = "0.20.0" }
tracing = { workspace = true }
uuid = { workspace = true }
url = { workspace = true, features = ["serde"] }
comfy-table = { workspace = true }

[dev-dependencies]
assert_cmd = { workspace = true }
assert_fs = { workspace = true }
assert-json-diff = { workspace = true }
dircpy = "=0.3.19"
duct = "=1.0.0"
git2 = { workspace = true, features = ["https"] }
graphql-schema-diff = "=0.2.0"
httpmock = { workspace = true }
indoc = { workspace = true }
jsonschema = "=0.30.0"
mime = "=0.3.17"
mockall = "=0.13.1"
portpicker = "=0.1.1"
predicates = { workspace = true }
rand_regex = "=0.18.1"
reqwest = { workspace = true, features = ["native-tls-vendored"] }
rstest = { workspace = true }
serial_test = { workspace = true }
speculoos = { workspace = true }
tower-test = { workspace = true }
tracing-test = { workspace = true }
temp-env = { version = "=0.3.6", features = ["async_closure"] }

# For sputnik, run tests with debug_assertions disabled. This is necessary because telemetry is not sent if
# debug_assertions is enabled, and the tests rely on telemetry being sent to mock APIs.
[profile.test.package.sputnik]
debug-assertions = false
